// 프로젝트의 플러그인 의존성 관리
buildscript {
    // build.gradle 에서 사용할 전역변수 설정
    ext {
        springBootVersion = '2.1.9.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
// 스프링 부트의 의존성을 관리해주는 프레임워크
apply plugin: 'io.spring.dependency-management'

group 'org.rangjin'
version '1.0-SNAPSHOT'
sourceCompatibility = 8

// 각종 의존성 라이브러리들을 어떤 원격 저장소에서 받을지 설정
repositories {
    mavenCentral()
    jcenter()
}

// 필요한 의존성 라이브러리 설정
dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.projectlombok:lombok')
    // 스프링 부트 버전에 맞춰 자동으로 JPA 관련 라이브러리 버전 관리
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-mustache')
    // 소셜 로그인 등 소셜 기능 구현 시 필요한 의존성
    compile('org.springframework.boot:spring-boot-starter-oauth2-client')
    // 세션이 내장 톰캣에 저장됨 -> 애플리케이션이 재시작되면 로그인이 풀림
    // + 2대 이상의 서버에서 서비스를 위해 톰캣마다 세션 동기화 설정을 해야함
    // 1. 톰캣 세션 이용, 2. MySQL 등 DB 사용, Redis 등 메모리 DB 사용
    compile('org.springframework.session:spring-session-jdbc')
    compile('org.mariadb.jdbc:mariadb-java-client')
    // 인메모리 관계형 데이터베이스
    // 메모리에서 실행되므로 애플리케이션을 실행할 때마다 초기화 됨 -> 테스트 용도로 많이 사용
    compile('com.h2database:h2')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
}