language: java
jdk:
  - openjdk8

# 어느 브랜치가 푸시될 때 수행할 지 지정
branches:
  only:
    - master

# Travis CI 서버의 Home
# gradle 을 통해 의존성을 받으면 해당 디렉토리에 캐시
# 같은 의존성은 다음 배포 때 다시 받지 않도록 설정
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# 푸시되었을 때 수행하는 명령어
script: "./gradlew clean build"

before_install:
  - chmod +x gradlew

before_deploy:
  - mkdir -p before-deploy
  - cp scripts/*.sh before-deploy/
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy *
  - cd ../ && mkdir -p deploy
  - mv before-deploy.before-deploy.zip deploy/spring-boot-webservice.zip

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings 에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings 에 설정된 값
    bucket: spring-boot-webservice-build # S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private 로
    local-dir: deploy # before deploy 에서 생성한 디렉토리
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings 에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings 에 설정된 값
    bucket: spring-boot-webservice-build # S3 버킷
    key: spring-boot-webservice.zip # 빌드 파일을 압축해서 전달
    bundle_type: zip
    application: spring-boot-webservice # 웹 콘솔에서 등록한 CodeDeploy 애플리케이션
    deployment_group: spring-boot-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true

# CI 실행 완료 시 메일로 알람
notifications:
  email:
    recipients:
      - "heathaze2037@gmail.com"